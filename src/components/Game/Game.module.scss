:root {
  // variables that define general look of the board
  --board-color: theme('colors.blue.500');
  --board-padding: 1rem;
  --slot-border-color: theme('colors.blue.800');
  --slot-margin: 5px;
  --min-slot-size: 20px;
  --max-slot-size: 60px;
  --player-1-color: 'red';
  --player-2-color: 'yellow';


  /* derived variables based on the variables above */
  
  // calculate slot size so that it is responsive:
  // take whole available viewport width and subtract all spacing (paddings, margins) that are within the
  // board, but are not a part of the slots. Divide remaining space by the amount of slots (7) and add a bit of extra padding (5px)
  // TODO: right now the amount of columns is fixed to 7. In case that number can be changed, wire it being updated
  // in the component to a CSS variable and use that variable in the calculations below
  --slot-size: calc((100vw - (var(--slot-margin) * 7 * 2) - (var(--board-padding) * 2)) / 7 - 5px);
  --slot-radius: calc(max(var(--slot-size), var(--min-slot-size)) / 2);

  // amount of space on top of the board to allow for a disc to appear when user hovers over column
  --board-top-offset-margins: calc(var(--slot-margin) * 2 + var(--board-padding));
  --board-top-offset: min(calc(var(--slot-size) + var(--board-top-offset-margins)), calc(60px + var(--board-top-offset-margins)));
}

.scene {
  display: flex;
  justify-content: center;
  align-items: center;
}

.board {
  background-color: var(--board-color);
  padding: var(--board-padding);
  margin-top: var(--board-top-offset);
  display: flex;
}
